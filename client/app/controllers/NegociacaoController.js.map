{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacoesView","Mensagem","MensagemView","NegociacaoService","getNegociacaoDAO","DataInvalidaException","Negociacao","Bind","DateConverter","NegociacaoController","constructor","$","document","querySelector","bind","_inputQuantidade","_inputData","_inputValor","_negociacoes","_negociacoesView","update","_mensagem","_mensagemView","_service","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","console","log","stack","message","importaNegociacoes","obterNegociacoesDoPeriodo","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes } from '../domain/negociacao/Negociacoes.js';\r\nimport { NegociacoesView } from '../UI/views/NegociacoesView.js';\r\nimport { Mensagem } from '../UI/models/Mensagem.js';\r\nimport { MensagemView } from '../UI/views/MensagemView.js';\r\nimport { NegociacaoService } from '../domain/negociacao/NegociacaoService.js';\r\nimport { getNegociacaoDAO } from '../util/DAOFactory.js';\r\nimport { DataInvalidaException } from '../UI/converters/DataInvalidaException.js';\r\nimport { Negociacao } from '../domain/negociacao/Negociacao.js';\r\nimport { Bind } from '../util/Bind.js';\r\nimport { DateConverter } from '../ui/converters/DateConverter.js';\r\n\r\n// exporta a classe NegociacaoController para quem precisar importar\r\nexport class NegociacaoController {\r\n  constructor() {\r\n    const $ = document.querySelector.bind(document);\r\n\r\n    this._inputQuantidade = $(\"#quantidade\");\r\n    this._inputData = $(\"#data\");\r\n    this._inputValor = $(\"#valor\");\r\n\r\n    // Através de Bind , passamos a instância do modelo, a instância\r\n    // da View e as propriedades ou métodos que desejamos ativar a\r\n    // atualização automática.\r\n    this._negociacoes = new Bind(\r\n      new Negociacoes(),\r\n      new NegociacoesView(\"#negociacoes\"),\r\n      // Não passamos mais os parâmetros de armadilha\r\n      // Dentro de um array\r\n      \"adiciona\",\r\n      \"esvazia\"\r\n    );\r\n\r\n    this._negociacoesView = new NegociacoesView(\"#negociacoes\");\r\n\r\n    // Recebe inicialmente o modelo que encapsula uma lista vazia\r\n    // Chamando o Update\r\n    this._negociacoesView.update(this._negociacoes);\r\n\r\n    this._mensagem = new Bind(\r\n      new Mensagem(),\r\n      new MensagemView(\"#mensagemView\"),\r\n      // Não passamos mais os parâmetros de armadilha\r\n      // Dentro de um array\r\n      \"texto\"\r\n    );\r\n    // Instância da View de mensagens\r\n    this._mensagemView = new MensagemView(\"#mensagemView\");\r\n    // Chamando o Update\r\n    this._mensagemView.update(this._mensagem);\r\n\r\n    this._service = new NegociacaoService();\r\n\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n\r\n    getNegociacaoDAO()\r\n    .then(dao => dao.listaTodos())\r\n    .then(negociacoes =>\r\n        negociacoes.forEach(negociacao => \r\n            this._negociacoes.adiciona(negociacao)))\r\n    .catch(err => this._mensagem.texto = err);\r\n  }\r\n\r\n  adiciona(event) {\r\n    // Cancela a submissão do formulário\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const negociacao = this._criaNegociacao();\r\n\r\n       getNegociacaoDAO()\r\n        .then(dao => dao.adiciona(negociacao))\r\n        .then(() => {\r\n          this._negociacoes.adiciona(negociacao);\r\n          this._mensagem.texto = \"Negociação adicionada com sucesso!\";\r\n          this._limpaFormulario();\r\n        })\r\n        .catch(err => (this._mensagem.texto = err));\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log(err.stack);\r\n\r\n      if (err instanceof DataInvalidaException) {\r\n        this._mensagem.texto = err.message;\r\n      } else {\r\n        // Mensagem genérica para qualquer problema que possa acontecer\r\n        this._mensagem.texto =\r\n          \"Um erro inexperado aconteceu. Entre em contato com o suporte!\";\r\n      }\r\n    }\r\n  }\r\n\r\n  // importaNegociacoes() {\r\n  //   // criação do array negociações\r\n  //   const negociacoes = [];\r\n\r\n  //   // retorna uma promise com as negociações da semana atual\r\n  //   this._service\r\n  //     .obterNegociacoesDaSemana()\r\n  //     // através do then, temos acesso aos dados de retorno de uma promise\r\n  //     .then(semana => {\r\n  //       // usando o spread operator,\r\n  //       // que desmembrará cada elemento do array anterior,\r\n  //       // passando-os como parâmetro para a função push()\r\n  //       negociacoes.push(...semana);\r\n  //       // retorna uma promise com as negociações da semana anterior\r\n  //       return this._service.obterNegociacoesDaSemanaAnterior();\r\n  //     })\r\n  //     .then(anterior => {\r\n  //       // adicionando também os dados da semana anterior juntos ao da semana atual (mesmo array)\r\n  //       negociacoes.push(...anterior);\r\n  //       return this._service.obterNegociacoesDaSemanaRetrasada();\r\n  //     })\r\n  //     .then(retrasada => {\r\n  //       negociacoes.push(...retrasada);\r\n  //       // para cada negociação no array, adicionamos a negociação na lista\r\n  //       negociacoes.forEach(negociacao =>\r\n  //         this._negociacoes.adiciona(negociacao)\r\n  //       );\r\n  //       // exibe mensagem de sucesso!\r\n  //       this._mensagem.texto = \"Negociações importadas com sucesso!\";\r\n  //     })\r\n  //     // caso não haja sucesso, exibe mensagem com o erro\r\n  //     .catch(err => (this._mensagem.texto = err));\r\n  // }\r\n\r\n  importaNegociacoes() {\r\n    this._service\r\n      .obterNegociacoesDoPeriodo()\r\n      .then(negociacoes => {\r\n        negociacoes\r\n          .filter(\r\n            novaNegociacao =>\r\n              !this._negociacoes\r\n                .paraArray()\r\n                .some(negociacaoExistente =>\r\n                  novaNegociacao.equals(negociacaoExistente)\r\n                )\r\n          )\r\n          .forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n        this._mensagem.texto = \"Negociações do período importadas com sucesso!\";\r\n      })\r\n      .catch(err => (this._mensagem.texto = err));\r\n  }\r\n\r\n  _limpaFormulario() {\r\n    this._inputData.value = \"\";\r\n    this._inputQuantidade.value = 1;\r\n    this._inputValor.value = 0.0;\r\n    this._inputData.focus();\r\n  }\r\n\r\n  _criaNegociacao() {\r\n    return new Negociacao(\r\n      DateConverter.paraData(this._inputData.value),\r\n      parseInt(this._inputQuantidade.value),\r\n      parseFloat(this._inputValor.value)\r\n    );\r\n  }\r\n\r\n  apaga() {\r\n    \r\n    getNegociacaoDAO()\r\n      .then(dao => dao.apagaTodos())\r\n      .then(() => {\r\n        this._negociacoes.esvazia();\r\n        this._mensagem.texto = \"Negociações apagadas com sucesso!\";\r\n      })\r\n      .catch(err => this._mensagem.texto = err);\r\n  }\r\n}\r\n"]}