{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","Error","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","Promise","all","periodo","reduce","novoArray","item","concat","sort","a","b","getTime","catch","console","log"],"mappings":";;;;;;AAASA,iB,sBAAAA,W;;AACAC,gB,iBAAAA,U;;;AAEF,YAAMC,iBAAN,CAAwB;AAC7BC,sBAAc;AACZ,eAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACD;;AAEDK,mCAA2B;AACzB,iBAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EAAqCC,IAArC,CACLC,SACEA,MAAMC,GAAN,CACEC,UACE,IAAIT,UAAJ,CACE,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFJ,CAFG,EAULC,OAAO;AACL,kBAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD,WAZI,CAAP;AAcD;;AAEDC,2CAAmC;AACjC,iBAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,sBAAf,EAAuCC,IAAvC,CACLC,SACEA,MAAMC,GAAN,CACEC,UACE,IAAIT,UAAJ,CACE,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFJ,CAFG,EAULC,OAAO;AACL,kBAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;AAGD,WAdI,CAAP;AAgBD;;AAEDE,4CAAoC;AAClC,iBAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,uBAAf,EAAwCC,IAAxC,CACLC,SACEA,MAAMC,GAAN,CACEC,UACE,IAAIT,UAAJ,CACE,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFJ,CAFG,EAULC,OAAO;AACL,kBAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;AAGD,WAdI,CAAP;AAgBD;;AAEDG,oCAA4B;AAC1B,iBAAOC,QAAQC,GAAR,CAAY,CACjB,KAAKhB,wBAAL,EADiB,EAEjB,KAAKY,gCAAL,EAFiB,EAGjB,KAAKC,iCAAL,EAHiB,CAAZ,EAKJX,IALI,CAKCe,WACJA,QACGC,MADH,CACU,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAD/B,EACuD,EADvD;AAEE;AACA;AACA;AAJF,WAKGE,IALH,CAKQ,CAACC,CAAD,EAAIC,CAAJ,KAAUA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EALrC,CANG,EAaJC,KAbI,CAaEhB,OAAO;AACZiB,oBAAQC,GAAR,CAAYlB,GAAZ;AACA,kBAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD,WAhBI,CAAP;AAiBD;AA9E4B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\r\nimport { Negociacao } from './Negociacao.js';\r\n\r\nexport class NegociacaoService {\r\n  constructor() {\r\n    this._http = new HttpService();\r\n  }\r\n\r\n  obterNegociacoesDaSemana() {\r\n    return this._http.get(\"negociacoes/semana\").then(\r\n      dados =>\r\n        dados.map(\r\n          objeto =>\r\n            new Negociacao(\r\n              new Date(objeto.data),\r\n              objeto.quantidade,\r\n              objeto.valor\r\n            )\r\n        ),\r\n      err => {\r\n        throw new Error(\"Não foi possível obter as negociações da semana\");\r\n      }\r\n    );\r\n  }\r\n\r\n  obterNegociacoesDaSemanaAnterior() {\r\n    return this._http.get(\"negociacoes/anterior\").then(\r\n      dados =>\r\n        dados.map(\r\n          objeto =>\r\n            new Negociacao(\r\n              new Date(objeto.data),\r\n              objeto.quantidade,\r\n              objeto.valor\r\n            )\r\n        ),\r\n      err => {\r\n        throw new Error(\r\n          \"Não foi possível obter as negociações da semana anterior\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  obterNegociacoesDaSemanaRetrasada() {\r\n    return this._http.get(\"negociacoes/retrasada\").then(\r\n      dados =>\r\n        dados.map(\r\n          objeto =>\r\n            new Negociacao(\r\n              new Date(objeto.data),\r\n              objeto.quantidade,\r\n              objeto.valor\r\n            )\r\n        ),\r\n      err => {\r\n        throw new Error(\r\n          \"Não foi possível obter as negociações da semana anterior\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  obterNegociacoesDoPeriodo() {\r\n    return Promise.all([\r\n      this.obterNegociacoesDaSemana(),\r\n      this.obterNegociacoesDaSemanaAnterior(),\r\n      this.obterNegociacoesDaSemanaRetrasada()\r\n    ])\r\n      .then(periodo =>\r\n        periodo\r\n          .reduce((novoArray, item) => novoArray.concat(item), [])\r\n          // Ordenando o array de negociações por ordem decrescente de data\r\n          // resultados: iguais = 0, primeiro maior que o segundo >= 1,\r\n          // primeiro menor que o segundo <= -1.\r\n          .sort((a, b) => b.data.getTime() - a.data.getTime())\r\n      )\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error(\"Não foi possível obter as negociações do período.\");\r\n      });\r\n  }\r\n}\r\n"]}