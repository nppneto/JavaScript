{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","Error","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,iB,sBAAAA,W;;AACAC,gB,iBAAAA,U;;;AAEF,YAAMC,iBAAN,CAAwB;AAC7BC,sBAAc;AACZ,eAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACD;;AAEDK,mCAA2B;AACzB,iBAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EAAqCC,IAArC,CACLC,SACEA,MAAMC,GAAN,CACEC,UACE,IAAIT,UAAJ,CACE,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFJ,CAFG,EAULC,OAAO;AACL,kBAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD,WAZI,CAAP;AAcD;;AAEDC,2CAAmC;AACjC,iBAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,sBAAf,EAAuCC,IAAvC,CACLC,SACEA,MAAMC,GAAN,CACEC,UACE,IAAIT,UAAJ,CACE,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFJ,CAFG,EAULC,OAAO;AACL,kBAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;AAGD,WAdI,CAAP;AAgBD;;AAEDE,4CAAoC;AAClC,iBAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,uBAAf,EAAwCC,IAAxC,CACLC,SACEA,MAAMC,GAAN,CACEC,UACE,IAAIT,UAAJ,CACE,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFJ,CAFG,EAULC,OAAO;AACL,kBAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;AAGD,WAdI,CAAP;AAgBD;;AAEKG,iCAAN,GAAkC;AAAA;;AAAA;AAChC,gBAAI;AACF,kBAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC9B,MAAKjB,wBAAL,EAD8B,EAE9B,MAAKY,gCAAL,EAF8B,EAG9B,MAAKC,iCAAL,EAH8B,CAAZ,CAApB;AAKA,qBAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,uBAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,eADL,EACkD,EADlD;AAEH;AACA;AACA;AAJG,eAKFE,IALE,CAKG,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAA7B;AAAA,eALH,CAAP;AAMD,aAZD,CAYE,OAAMf,GAAN,EAAW;AACTgB,sBAAQC,GAAR,CAAYjB,GAAZ;AACA,oBAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD;AAhB6B;AAiBjC;AA7E4B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\r\nimport { Negociacao } from './Negociacao.js';\r\n\r\nexport class NegociacaoService {\r\n  constructor() {\r\n    this._http = new HttpService();\r\n  }\r\n\r\n  obterNegociacoesDaSemana() {\r\n    return this._http.get(\"negociacoes/semana\").then(\r\n      dados =>\r\n        dados.map(\r\n          objeto =>\r\n            new Negociacao(\r\n              new Date(objeto.data),\r\n              objeto.quantidade,\r\n              objeto.valor\r\n            )\r\n        ),\r\n      err => {\r\n        throw new Error(\"Não foi possível obter as negociações da semana\");\r\n      }\r\n    );\r\n  }\r\n\r\n  obterNegociacoesDaSemanaAnterior() {\r\n    return this._http.get(\"negociacoes/anterior\").then(\r\n      dados =>\r\n        dados.map(\r\n          objeto =>\r\n            new Negociacao(\r\n              new Date(objeto.data),\r\n              objeto.quantidade,\r\n              objeto.valor\r\n            )\r\n        ),\r\n      err => {\r\n        throw new Error(\r\n          \"Não foi possível obter as negociações da semana anterior\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  obterNegociacoesDaSemanaRetrasada() {\r\n    return this._http.get(\"negociacoes/retrasada\").then(\r\n      dados =>\r\n        dados.map(\r\n          objeto =>\r\n            new Negociacao(\r\n              new Date(objeto.data),\r\n              objeto.quantidade,\r\n              objeto.valor\r\n            )\r\n        ),\r\n      err => {\r\n        throw new Error(\r\n          \"Não foi possível obter as negociações da semana anterior\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  async obterNegociacoesDoPeriodo() {\r\n    try {\r\n      let periodo = await Promise.all([\r\n        this.obterNegociacoesDaSemana(),\r\n        this.obterNegociacoesDaSemanaAnterior(),\r\n        this.obterNegociacoesDaSemanaRetrasada()\r\n      ]);\r\n      return periodo\r\n          .reduce((novoArray, item) => novoArray.concat(item), [])\r\n          // Ordenando o array de negociações por ordem decrescente de data\r\n          // resultados: iguais = 0, primeiro maior que o segundo >= 1,\r\n          // primeiro menor que o segundo <= -1.\r\n          .sort((a, b) => b.data.getTime() - a.data.getTime())\r\n    } catch(err) {\r\n        console.log(err);\r\n        throw new Error(\"Não foi possível obter as negociações do período.\");\r\n      };\r\n  }\r\n}\r\n"]}